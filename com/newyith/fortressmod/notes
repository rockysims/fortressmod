onPlaced, clog unless its the only unclogged generator
onActivated, if (!oldestGenerator) clog else generate walls
onDeactivated, degenerate the walls it generated
onBroken, if (oldestGenerator) clog the others

Maybe:
1) Fortress disruptors are crafted with 8 dark stone blocks around an emerald ore block
    darkstone dust is produced by fortress generators at a rate determined by the number of wall blocks generated
2) Fortress disruptors are crafted with 8 fortress generators around an emerald ore block?

Still Need:
TODO: review expansion of generators section in fortress manual (remove it probably (or write it better))
remove debug recipes
TODO: consider adding glowstone to emergency key recipe (1 glowstone block in the middle?)
TODO: make generator emit light when burning (active)
TODO: remove override that can prevent emergency key from working
TODO: consider issue of 2 fortresses semi close to each other and built up until eventually they connect and one fortress is controlled by other
    Maybe fix is: make generators play nice instead of clogging:
        make generators not degenerate connected wall unless its the only generator connected (128 search range)
            this fixes major issue of breaking into other fortresses
                and reintroduces issue of being able to build a fortress around someone else's fortress
        //when generating, generate all connected wall points (connected without traversing wall points belonging to other generators within 128 (or within 1 layer of wall belonging to other generators))
        when generating, find points to generate as follows:
            connectedFGs = all generators connected to this generator (128 search range)
            claimedPoints = merge of claimedPoints of all connectedFGs
            wallPoints = all connected wall points ignoring (and not traversing) claimedPoints (64 search range)
            generate wallPoints and set core.wallPoints = wallPoints
        TODO: set core.claimedPoints when generating wall or onPlaced
        TODO: replace clogging logic with whatever makes sense (usually generating anyway and letting it figure it out)
TODO: make generator clog if generateWall called too many times (5?) within last 5 seconds or something
    this protects against rapid cycling of redstone power causing lag
TODO: keep track of claimedWallPoints and on getClaimedPoints() if not all claimedWallPoints are fortress wall then update claimed before returning
    this fixes issue where disconnected but still claimed wall couldn't be controlled by another generator
    this also increases lag a bit but probably worth it

Done (current work sub tasks):
onPlaced, if generator is directly connected to another generator's claimedPoint, clog (and show message)
make generator claim 3x3x3 around itself


Maybe:
test what if while degenerating wall, long section is disconnected, then generate again. does the unconnected part stop half generated?
    yes but it still remembers it needs to degenerate the now disconnected part when next paused
    TODO: retest this?
TODO: consider making generators produce teleport home tokens from molten glowstone
    maybe??: 8 molten around 1 dust -> X teleport home tokens
    TODO: consider skipping this on the grounds that fortresses aren't supposed to be aware of who lives there
add generate/degenerate sounds
    https://www.freesound.org/people/PhreaKsAccount/sounds/46489/
    https://www.freesound.org/people/MiceHead/sounds/13294/
TODO: make redstone on == generator on (and not be paused if no potential redstone power adjacent) (if possible)

Done (overall):
/stuck command to get you out of an enemy fortress (5 minutes then teleport to nearby)
add black and white pic of glowstone in fg fuel slot
manual book (crafted with 1 fortress generator)
add flames (like furnace has) to fortress generator when its active
animated generation/degeneration
add redstone power pauses generator feature
generation radius limit
fortress doors (with signs)
make fortress glass block
emergency key (quarts)


TODO: switch to using Deque instead of Stack

TODO: Later: add redstone controls (pause generation if powered) 
    or maybe redstone makes it regenerate walls (start generating new wall blocks like if you turned it off then on again)






onFortressGeneratorPlaced
    placedGenerator.timePlaced = now
    fgs = all fortress generators connected to placedGenerator by wall (not including placedGenerator)
    if (fgs.length > 0)
        turn placedGenerator into clogged generator

onFortressGeneratorStartsBurning
    fgs = all fortress generators connected to startedFg by wall (not including startedFg)
    foundOlderGenerator = false
    for (fg in fgs)
        if (fg.timePlaced < startedFg.timePlaced)
            //found older generator
            foundOlderGenerator = true
            break

    if (foundOlderGenerator)
        change startedFg into clogged generator
    else
        startedFg.generatedBlocks = startedFg.generateWalls()

onFortressGeneratorStopsBurning
    for (b in fg.generatedBlocks)
        degenerate(b)

onBreakFortressGeneratorBlock
    fgs = all fortress generators connected to brokenFgBlock by wall (not including brokenFgBlock)
    foundOlderGenerator = false
    for (fg in fgs)
        if (fg.timePlaced < brokenFgBlock.timePlaced)
            //found older generator
            foundOlderGenerator = true
            break

    if (!foundOlderGenerator)
        for (fg in fgs)
            change fg into clogged generator






